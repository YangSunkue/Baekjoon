def dfs(graph, v, visited): # (노드연결정보, 시작노드, 방문정보)
    # 현재 노드 방문 처리
    visited[v] = True
    print(v,'방문')
    # 현재 노드와 연결된 다른 노드를 재귀적으로 방문
    for i in graph[v]: # v는 현재 노드, i는 현재 노드에 대한 인접 노드
        if not visited[i]: # 인접 노드에 아직 방문하지 않았다면
            dfs(graph, i, visited) # 해당 인접 노드부터 다시 탐색 시작 ( 스택의 최상단에 담기 ),
                                    # 이렇게 깊은 곳까지 가다가 인접 노드가 없으면 스택에서 빠지면서 인접 노드가 존재하는 상위 노드까지 돌아가 다시 탐색 시작
                                        # 모든 노드를 방문했다면 (visited가 전부 True일 경우) 함수는 종료된다
            
graph = [ # 노드번호와 인덱스를 동기화하기 위해 처음에 빈 리스트 추가
  [],
  [2, 3, 8],
  [1, 7],
  [1, 4, 5],
  [3, 5],
  [3, 4],
  [7],
  [2, 6, 8],
  [1, 7]
]

visited = [False] * 9 # 8개 노드이지만 빈 리스트가 있으므로 9개로 초기화

dfs(graph, 1, visited)